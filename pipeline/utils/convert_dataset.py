import numpy as np
import lmdb
import msgpack
import zlib
import sqlite3
import csv

def features_postproc_func(x):
    x = np.asarray(x[0], dtype=np.float32)
    return x

print("creating look up table...")
sqlite_conn = sqlite3.connect('meta.db')
query = "select sha256,is_malware,adware,flooder,ransomware,dropper,spyware,packed,crypto_miner,file_infector,installer,worm,downloader from meta"
sqlite_cur = sqlite_conn.cursor()
y = sqlite_cur.execute(query).fetchall()
y_lookup_table = dict()
for i, record in enumerate(y):
    y_lookup_table[record[0]] = i
print("look up table created...")

with open('sorel.csv', 'w') as sorel:
    sorelwriter = csv.writer(sorel, delimiter=',')
    with lmdb.open("ember_features", map_size=5000000000).begin(write=False).cursor() as cursor:
        cursor_iterator = cursor.iternext()
        for key, value in cursor_iterator:

            index = y_lookup_table.get(key.decode('utf-8'))
            if index is None:
                continue

            sha, is_malware, adware, flooder, ransomware, dropper, spyware, packed, crypto_miner, file_infector, installer, worm, downloader = y_lookup_table[key.decode('utf-8')] = y[index]

            if int(is_malware) == 0:
                continue

            tags = [int(adware > 0),
                int(flooder > 0),
                int(ransomware > 0),
                int(dropper > 0),
                int(spyware > 0),
                int(packed > 0),
                int(crypto_miner > 0),
                int(file_infector > 0),
                int(installer > 0),
                int(worm > 0),
                int(downloader > 0)]


            class_ = int("".join(str(x) for x in tags), 2)

            if class_ == 0:
                continue

            x = features_postproc_func(msgpack.loads(zlib.decompress(value), strict_map_key=False))
            sorelwriter.writerow([sha, class_] + tags + list(x))
